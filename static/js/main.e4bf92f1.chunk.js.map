{"version":3,"sources":["logo.svg","basepath.js","test/Text.js","components/UnusualCube/UnusualCube.js","components/Particles/Particle.js","components/Particles/Particles.js","components/Lights/Lights.js","components/3DItems/Halo.js","pages/item-page/ItemPage.js","pages/homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["BASEPATH","extend","TextGeometry","Text","UnusualCube","url","receiveShadow","useGLTF","scene","nodes","animations","materials","useAnimations","actions","ref","mixer","names","clips","console","log","useEffect","Object","values","forEach","action","i","play","child","castShadow","Boolean","material","mat","aoMap","envMapIntensity","name","startsWith","scale","position","object","gaussianRand","n","rand","Math","random","Particle","model","radius","randomness","mouse","current","count","mesh","useRef","useThree","size","viewport","dummy","width","useMemo","THREE","particles","temp","PI","t","factor","speed","xFactor","yFactor","zFactor","phi","push","mx","my","maxfx","globalTime","useFrame","state","vec","pos","set","window","innerWidth","innerHeight","particle","s","cos","a","sin","b","x","z","TP","fx","fy","fz","max","abs","theta","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","args","geometry","Particles","meshes","filter","item","type","ecount","round","length","map","Lights","intensity","color","attach","angle","penumbra","fallback","Environment","background","files","path","Halo","metalness","GroundPlane","bgcolor","alphaMap","useLoader","TextureLoader","useState","time","now","clock","getElapsedTime","c","color_1","color_2","weight","h2d","h","parseInt","v1","substr","v2","val","floor","toString","mix","hex","result","exec","r","g","hexToRgb","roughness","transparent","opacity","hashToURL","hash","parts","split","cid","CID","toV0","version","cidv1","toV1","hashv0","hashv1","toBaseEncodedString","ItemPage","setState","texx","setTexx","modelUrl","setModelUrl","setBgcolor","isMobile","useCallback","clientX","y","clientY","test","navigator","userAgent","className","style","linear","dpr","camera","fov","onCreated","gl","onMouseMove","onMouseOver","onMouseMoveCapture","onPointerMove","onPointerDown","onPointerMoveCapture","colorManagement","shadowMap","shadows","AdaptiveDpr","pixelated","OrbitControls","minDistance","maxDistance","enablePan","onClick","onSubmit","e","preventDefault","flex","value","onChange","target","Homepage","to","App","basename","process","render","props","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4bf92f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const BASEPATH = \"/unusualcubes-fe\"; //\"/UnusualCubesApp\";\r\n\r\nexport default BASEPATH;\r\n","import * as THREE from \"three\";\r\nimport React, { useMemo, useRef, useLayoutEffect } from \"react\";\r\nimport { extend, useLoader } from \"@react-three/fiber\";\r\nimport { FontLoader } from \"three/examples/jsm/loaders/FontLoader\";\r\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\r\nimport BASEPATH from \"../basepath\";\r\n\r\nextend({ TextGeometry });\r\n\r\nfunction Text({\r\n  children,\r\n  vAlign = \"center\",\r\n  hAlign = \"center\",\r\n  size = 1.5,\r\n  color = \"#000000\",\r\n  ...props\r\n}) {\r\n  const font = useLoader(FontLoader, BASEPATH + \"/CocoSharp.json\");\r\n  const config = useMemo(\r\n    () => ({\r\n      font,\r\n      size: 40,\r\n      height: 30,\r\n      curveSegments: 12,\r\n      bevelEnabled: false,\r\n      flatShading: false,\r\n    }),\r\n    [font]\r\n  );\r\n  const mesh = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    const size = new THREE.Vector3();\r\n    mesh.current.geometry.computeBoundingBox();\r\n    mesh.current.geometry.boundingBox.getSize(size);\r\n    mesh.current.position.x =\r\n      hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x;\r\n    mesh.current.position.y =\r\n      vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y;\r\n  }, [children]);\r\n\r\n  return (\r\n    <group {...props} scale={[size * 0.05, size * 0.05, size * 0.04]}>\r\n      <mesh ref={mesh} castShadow receiveShadow>\r\n        <textGeometry attach=\"geometry\" args={[children, config]} />\r\n        <meshPhysicalMaterial\r\n          attach=\"material\"\r\n          color=\"#ffffff\"\r\n          flatShading={false}\r\n          roughness={0.05}\r\n          needsUpdate={true}\r\n        />\r\n      </mesh>\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n","import * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState, useMemo, useEffect } from \"react\";\r\n\r\nimport { useLoader, Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\n\r\nfunction UnusualCube({\r\n  url = BASEPATH + \"/model_6.glb\",\r\n  receiveShadow = false,\r\n}) {\r\n  //const three = useThree();\r\n  //const { size, viewport, gl, camera, clock } = three;\r\n\r\n  //const model = useRef();\r\n\r\n  //const dummy = useMemo(() => new THREE.Object3D(), []);\r\n\r\n  const { scene, nodes, materials, animations } = useGLTF(url);\r\n\r\n  const { ref, mixer, names, actions, clips } = useAnimations(\r\n    animations,\r\n    scene\r\n  );\r\n\r\n  console.log(\"nodes\", nodes);\r\n  useEffect(() => {\r\n    console.log(\"actions:\", actions);\r\n    Object.values(actions).forEach((action, i) => {\r\n      action.play();\r\n    });\r\n  }, []);\r\n\r\n  for (let child of Object.values(nodes)) {\r\n    child.castShadow = true;\r\n    child.receiveShadow = Boolean(receiveShadow);\r\n    if (child.material) {\r\n      const mat = child.material;\r\n      mat.aoMap = null;\r\n      mat.envMapIntensity = 0.3;\r\n      if (!mat.name.startsWith(\"ZMAT\")) mat.envMapIntensity = 0.6;\r\n      //console.log(mat);\r\n      //mat.flatShading;\r\n      //mat.toneMapped = false;\r\n    }\r\n  }\r\n  console.log(\"cubes\", nodes);\r\n  /*\r\n  const parts = Object.values(nodes).filter((node) => node.type === \"Mesh\");\r\n\r\n\r\n  // Render-loop\r\n  useFrame(() => {\r\n    // Update instanced diamonds\r\n    parts.forEach((part, i) => {\r\n      const { position, rotation, scale } = part;\r\n      dummy.position.set(position.x, position.y, position.z);\r\n      dummy.rotation.set(rotation.x, rotation.y, rotation.z);\r\n      dummy.scale.set(scale.x, scale.y, scale.z);\r\n      dummy.updateMatrix();\r\n      model.current.setMatrixAt(i, dummy.matrix);\r\n      model.current.setColorAt(i, part.material.color);\r\n    });\r\n    model.current.instanceMatrix.needsUpdate = true;\r\n\r\n    camera.layers.set(0);\r\n    gl.setRenderTarget(null);\r\n    gl.render(three.scene, camera);\r\n  }, 1);*/\r\n\r\n  return (\r\n    <group scale={[0.5, 0.5, 0.5]} position={[-4.5, -4.5, 4.5]}>\r\n      <primitive object={scene} />\r\n      {/* <instancedMesh\r\n        ref={model}\r\n        args={[\r\n          parts[0].geometry,\r\n          new THREE.MeshPhysicalMaterial({\r\n            roughness: parts[0].material.roughness,\r\n          }),\r\n          parts.length,\r\n        ]}\r\n        castShadow\r\n      ></instancedMesh> */}\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default UnusualCube;\r\n","import * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState, useMemo, useEffect } from \"react\";\r\n\r\nimport { useLoader, Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\nimport { Vector3 } from \"three\";\r\n\r\nfunction gaussianRand(n) {\r\n  var rand = 0;\r\n  for (var i = 0; i < n; i++) rand += Math.random();\r\n  return rand / n;\r\n}\r\n\r\nfunction Particle({\r\n  model,\r\n  radius = 1,\r\n  randomness = 0.08,\r\n  mouse = { current: [0, 0] },\r\n  count = 100,\r\n  log = false,\r\n}) {\r\n  const mesh = useRef();\r\n  const light = useRef();\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n\r\n  const dummy = useMemo(() => new THREE.Object3D(), []);\r\n  // Generate some random positions, speed factors and timings\r\n  const particles = useMemo(() => {\r\n    const temp = [];\r\n    const phiSeg = (2 * Math.PI) / 3;\r\n    const phiOffset = Math.PI / 6;\r\n    for (let i = 0; i < count; i++) {\r\n      const t = Math.random() * 100;\r\n      const factor = 20 + Math.random() * 100;\r\n      const speed = 0.002 + (2 * Math.random()) / 1000;\r\n      const xFactor = -50 + Math.random() * 100;\r\n      const yFactor = -50 + Math.random() * 100;\r\n      const zFactor = -50 + Math.random() * 100;\r\n      const phi = Math.PI * gaussianRand(1001);\r\n      temp.push({\r\n        t,\r\n        factor,\r\n        speed,\r\n        xFactor,\r\n        yFactor,\r\n        zFactor,\r\n        phi,\r\n        mx: 0,\r\n        my: 0,\r\n        maxfx: 0,\r\n      });\r\n    }\r\n    return temp;\r\n  }, [count]);\r\n  const globalTime = useMemo(() => {\r\n    const t = 0;\r\n    return { t };\r\n  }, []);\r\n  // The innards of this hook will run every frame\r\n  useFrame((state) => {\r\n    // Makes the light follow the mouse\r\n    /*\r\n    light.current.position.set(\r\n      mouse.current[0] / aspect,\r\n      -mouse.current[1] / aspect,\r\n      0\r\n    );*/\r\n\r\n    var vec = new THREE.Vector3(); // create once and reuse\r\n    var pos = new THREE.Vector3(); // create once and reuse\r\n\r\n    vec.set(\r\n      (mouse.current[0] / window.innerWidth) * 2 - 1,\r\n      -(mouse.current[1] / window.innerHeight) * 2 + 1,\r\n      0.5\r\n    );\r\n\r\n    /*\r\n    const { camera } = state;\r\n\r\n    vec.unproject(camera);\r\n\r\n    vec.sub(camera.position).normalize();\r\n\r\n    var distance = (0 - camera.position.z) / vec.z;\r\n\r\n    pos.copy(camera.position).add(vec.multiplyScalar(distance));*/\r\n\r\n    //console.log(mouse.current);\r\n\r\n    particles.forEach((particle, i) => {\r\n      let { t, factor, speed, xFactor, yFactor, zFactor, phi, maxfx } =\r\n        particle;\r\n      const s = (1 - 0.2 * (0.5 + Math.cos(t / 12) / 2)) * 0.35;\r\n      t = particle.t += speed / 2 / s / 5;\r\n      const a = Math.cos(t) + Math.sin(t * 1) / 10;\r\n      const b = Math.sin(t) + Math.cos(t * 2) / 10;\r\n      particle.mx += (pos.x - particle.mx) * 0.01;\r\n      particle.my += (pos.z - particle.my) * 0.01;\r\n      const PI = Math.PI;\r\n      const TP = 2 * Math.PI;\r\n      const fx =\r\n        (particle.mx / 10) * a +\r\n        //xFactor +\r\n        Math.cos((t / 10) * factor) +\r\n        (Math.sin(t * 1) * factor) / 10;\r\n      let fy =\r\n        (particle.my / 10) * b +\r\n        //yFactor +\r\n        Math.sin(((t * 1) / 10) * factor) +\r\n        (Math.cos(t * 3 * 2) * factor) / 10;\r\n      // fy = ((fy % TP) + TP) % TP;\r\n      const fz =\r\n        ((particle.my / 10) * b +\r\n          zFactor +\r\n          Math.cos((t / 10) * factor) +\r\n          (Math.sin(t * 3) * factor) / 10) %\r\n        TP;\r\n\r\n      maxfx = particle.maxfx = Math.max(maxfx, Math.abs(fx));\r\n\r\n      const theta = t + fx / 200;\r\n      //const fxfac = (15 * fx) / maxfx;\r\n      const fxfac = 15 + Math.sin(globalTime.t / 20) * 8;\r\n      if (log && i == 0) {\r\n        //console.log(s, t);\r\n        //console.log(fxfac);\r\n      }\r\n      phi += fy / 20; //fxfac;\r\n\r\n      dummy.position.set(\r\n        radius * Math.cos(theta) * Math.sin(phi),\r\n        radius * Math.cos(phi),\r\n        radius * Math.sin(theta) * Math.sin(phi)\r\n      );\r\n      dummy.scale.set(s, s, s);\r\n      dummy.rotation.set(fx, fz, fy);\r\n      dummy.updateMatrix();\r\n      mesh.current.setMatrixAt(i, dummy.matrix);\r\n    });\r\n    globalTime.t += 1;\r\n    mesh.current.instanceMatrix.needsUpdate = true;\r\n  });\r\n\r\n  return (\r\n    <instancedMesh\r\n      ref={mesh}\r\n      args={[model.geometry, model.material, count]}\r\n    ></instancedMesh>\r\n  );\r\n}\r\n\r\nexport default Particle;\r\n\r\n/*\r\n\r\n\r\n  const particles = useMemo(() => {\r\n    const temp = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const t = Math.random() * 100;\r\n      const factor = 20 + Math.random() * 100;\r\n      const speed = 0.001 + Math.random() / 1000;\r\n      const xFactor = -50 + Math.random() * 100;\r\n      const yFactor = -50 + Math.random() * 100;\r\n      const zFactor = -50 + Math.random() * 100;\r\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 });\r\n    }\r\n    return temp;\r\n  }, [count]);\r\n\r\n  */\r\n\r\n/*\r\n\r\n\r\n    particles.forEach((particle, i) => {\r\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\r\n      const s = (0.01 + Math.pow(Math.cos(t / 12), 2)) * 0.4;\r\n      t = particle.t += speed / 2 / s / 5;\r\n      const a = Math.cos(t) + Math.sin(t * 1) / 10;\r\n      const b = Math.sin(t) + Math.cos(t * 2) / 10;\r\n      particle.mx += (pos.x - particle.mx) * 0.01;\r\n      particle.my += (pos.z - particle.my) * 0.01;\r\n      const PI = Math.PI;\r\n      const TP = 2 * Math.PI;\r\n      const fx =\r\n        ((particle.mx / 10) * a +\r\n          xFactor +\r\n          Math.cos((t / 10) * factor) +\r\n          (Math.sin(t * 1) * factor) / 10) %\r\n        TP;\r\n      let fy =\r\n        ((particle.my / 10) * b +\r\n          yFactor +\r\n          Math.sin((t / 10) * factor) +\r\n          (Math.cos(t * 2) * factor) / 10) %\r\n        TP;\r\n      fy = (fy + TP) % TP;\r\n      const fz =\r\n        ((particle.my / 10) * b +\r\n          zFactor +\r\n          Math.cos((t / 10) * factor) +\r\n          (Math.sin(t * 3) * factor) / 10) %\r\n        TP;\r\n      //console.log(fy);\r\n      const h = (2 * fy) / PI - 1;\r\n\r\n      let phi = 0;\r\n      if (h > 1) phi = -Math.acos(-h + 2);\r\n      else phi = Math.acos(h);\r\n      //console.log(h);\r\n\r\n      dummy.position.set(\r\n        radius * Math.cos(fx) * Math.sin(phi),\r\n        radius * Math.cos(phi),\r\n        radius * Math.sin(fx) * Math.sin(phi)\r\n      );\r\n      dummy.scale.set(s, s, s);\r\n      dummy.rotation.set(fx, fz, fy);\r\n      dummy.updateMatrix();\r\n      mesh.current.setMatrixAt(i, dummy.matrix);\r\n    });\r\n\r\n    */\r\n","import * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState, useMemo, useEffect } from \"react\";\r\n\r\nimport { useLoader, Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\nimport { Vector3 } from \"three\";\r\nimport Particle from \"./Particle\";\r\n\r\nfunction Particles({\r\n  url = BASEPATH + \"/shards.glb\",\r\n  radius = 1,\r\n  randomness = 0.08,\r\n  mouse,\r\n  count = 1000,\r\n}) {\r\n  //const three = useThree();\r\n  //const { size, viewport, gl, camera, clock } = three;\r\n\r\n  //const model = useRef();\r\n\r\n  //const dummy = useMemo(() => new THREE.Object3D(), []);\r\n\r\n  const { scene, nodes, materials, animations } = useGLTF(url);\r\n\r\n  const { ref, mixer, names, actions, clips } = useAnimations(\r\n    animations,\r\n    scene\r\n  );\r\n\r\n  const meshes = Object.values(nodes).filter((item) => item.type == \"Mesh\");\r\n  meshes.forEach((item) => (item.position.x = 0));\r\n  console.log(\"meshes\", meshes);\r\n\r\n  const ecount = Math.round(count / meshes.length);\r\n\r\n  return (\r\n    <group scale={[1, 1, 1]} position={[0, 0, 0]}>\r\n      {meshes.map((mesh, i) => (\r\n        // <primitive object={mesh} key={mesh.name} />\r\n        <Particle\r\n          model={mesh}\r\n          radius={radius}\r\n          randomness={randomness}\r\n          mouse={mouse}\r\n          count={ecount}\r\n          log={i == 0}\r\n          key={mesh.name}\r\n        />\r\n      ))}\r\n      {/* <instancedMesh\r\n        ref={model}\r\n        args={[\r\n          parts[0].geometry,\r\n          new THREE.MeshPhysicalMaterial({\r\n            roughness: parts[0].material.roughness,\r\n          }),\r\n          parts.length,\r\n        ]}\r\n        castShadow\r\n      ></instancedMesh> */}\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default Particles;\r\n","import React, { Suspense } from \"react\";\r\n\r\nimport { Environment } from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\n\r\nfunction Lights() {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.3} color={\"#ffffff\"} />\r\n      <pointLight position={[-5, 30, -12]} intensity={0.3} />\r\n      <mesh position={[-5, 30, -12]} scale={0.5}>\r\n        <sphereBufferGeometry attach=\"geometry\" />\r\n        <meshBasicMaterial attach=\"material\" />\r\n      </mesh>\r\n      <spotLight\r\n        castShadow\r\n        //shadow-radius={0.5}\r\n        shadow-bias={-0.001}\r\n        position={[-10, 20, 10]}\r\n        intensity={1.2}\r\n        shadow-mapSize-width={512}\r\n        shadow-mapSize-height={512}\r\n        angle={Math.PI / 5}\r\n        penumbra={1}\r\n      />\r\n      <mesh position={[-10, 20, 10]} scale={1.5}>\r\n        <sphereBufferGeometry attach=\"geometry\" />\r\n        <meshBasicMaterial attach=\"material\" />\r\n      </mesh>\r\n      <pointLight position={[10, 20, -5]} intensity={0.6} color={\"#fffaf0\"} />\r\n      <mesh position={[10, 20, -5]} scale={0.5}>\r\n        <sphereBufferGeometry attach=\"geometry\" />\r\n        <meshBasicMaterial attach=\"material\" />\r\n      </mesh>\r\n      <pointLight position={[-10, -10, -3]} intensity={0.6} color={\"#fffaf0\"} />\r\n      <mesh position={[-10, -10, -3]} scale={0.5}>\r\n        <sphereBufferGeometry attach=\"geometry\" />\r\n        <meshBasicMaterial attach=\"material\" />\r\n      </mesh>\r\n      <pointLight position={[10, -10, -5]} intensity={0.2} color={\"#fffaf0\"} />\r\n      <mesh position={[10, -10, -5]} scale={0.5}>\r\n        <sphereBufferGeometry attach=\"geometry\" />\r\n        <meshBasicMaterial attach=\"material\" />\r\n      </mesh>\r\n      {/* <primitive object={directionalLight1.target} position={[0, 0, 0]}/> */}\r\n      <Suspense fallback={null}>\r\n        <Environment\r\n          background={false} // Whether to affect scene.background\r\n          files=\"abandoned_workshop_1k_small.hdr\" // Array of cubemap files OR single equirectangular file\r\n          path={BASEPATH + \"/\"} // Path to the above file(s)\r\n          //preset={null} // Preset string (overrides files and path)\r\n        />\r\n      </Suspense>\r\n\r\n      {/* <ContactShadows width={200} height={200} position-y={-10} far={20} /> */}\r\n      {/* <Sky sunPosition={[100, -3, -50]} distance={1000} /> */}\r\n      {/* <fog args={[\"white\", 10, 50]} /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lights;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\n\r\nfunction Halo({ url = BASEPATH + \"/halo-gold.glb\", receiveShadow = false }) {\r\n  const { scene, nodes, materials, animations } = useGLTF(url);\r\n\r\n  const { ref, mixer, names, actions, clips } = useAnimations(\r\n    animations,\r\n    scene\r\n  );\r\n\r\n  console.log(\"nodes\", nodes);\r\n  useEffect(() => {\r\n    console.log(\"actions:\", actions);\r\n    Object.values(actions).forEach((action, i) => {\r\n      action.play();\r\n    });\r\n  }, []);\r\n\r\n  for (let child of Object.values(nodes)) {\r\n    child.castShadow = true;\r\n    child.receiveShadow = Boolean(receiveShadow);\r\n    if (child.material) {\r\n      const mat = child.material;\r\n      mat.aoMap = null;\r\n      mat.envMapIntensity = 0.3;\r\n      if (mat.metalness > 0) mat.envMapIntensity = 0.75;\r\n      //mat.flatShading;\r\n      //mat.toneMapped = false;\r\n    }\r\n  }\r\n  console.log(\"cubes\", nodes);\r\n  return (\r\n    <group scale={[1, 1, 1]} position={[0, 7, 0]}>\r\n      <primitive object={scene} />\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default Halo;\r\n","import \"./ItemPage.css\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, {\r\n  Suspense,\r\n  useRef,\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nimport Text from \"../../test/Text\";\r\n\r\nimport { useLoader, Canvas, useFrame } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n  Sky,\r\n  Html,\r\n  softShadows,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\n\r\nimport { useSpring } from \"@react-spring/core\";\r\nimport { a } from \"@react-spring/three\";\r\nimport { MeshBasicMaterial, Object3D } from \"three\";\r\nimport UnusualCube from \"../../components/UnusualCube/UnusualCube\";\r\n\r\nimport * as CIDTOOL from \"cid-tool\";\r\nimport * as CID from \"cids\";\r\nimport Particles from \"../../components/Particles/Particles\";\r\nimport Lights from \"../../components/Lights/Lights\";\r\nimport Halo from \"../../components/3DItems/Halo\";\r\n\r\nvar mix = function (color_1, color_2, weight) {\r\n  function d2h(d) {\r\n    return d.toString(16);\r\n  } // convert a decimal value to hex\r\n  function h2d(h) {\r\n    return parseInt(h, 16);\r\n  } // convert a hex value to decimal\r\n\r\n  weight = typeof weight !== \"undefined\" ? weight : 50; // set the weight to 50%, if that argument is omitted\r\n\r\n  var color = \"#\";\r\n\r\n  for (var i = 0; i <= 5; i += 2) {\r\n    // loop through each of the 3 hex pairs—red, green, and blue\r\n    var v1 = h2d(color_1.substr(i + 1, 2)), // extract the current pairs\r\n      v2 = h2d(color_2.substr(i + 1, 2)),\r\n      // combine the current pairs from each source color, according to the specified weight\r\n      val = d2h(Math.floor(v2 + (v1 - v2) * (weight / 100.0)));\r\n\r\n    while (val.length < 2) {\r\n      val = \"0\" + val;\r\n    } // prepend a '0' if val results in a single digit\r\n\r\n    color += val; // concatenate val to our new color string\r\n  }\r\n\r\n  return color; // PROFIT!\r\n};\r\n\r\nfunction Box(props) {\r\n  // This reference will give us direct access to the mesh\r\n  const mesh = useRef();\r\n  // Set up state for the hovered and active state\r\n  const [hovered, setHover] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  // Subscribe this component to the render-loop, rotate the mesh every frame\r\n  useFrame((state, delta) => (mesh.current.rotation.x += 0.01));\r\n  // Return view, these are regular three.js elements expressed in JSX\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? 1.5 : 1}\r\n      onClick={(event) => setActive(!active)}\r\n      onPointerOver={(event) => setHover(true)}\r\n      onPointerOut={(event) => setHover(false)}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16) / 255.0,\r\n        g: parseInt(result[2], 16) / 255.0,\r\n        b: parseInt(result[3], 16) / 255.0,\r\n      }\r\n    : null;\r\n}\r\n\r\nfunction GroundPlane({ bgcolor }) {\r\n  const alphaMap = useLoader(TextureLoader, BASEPATH + \"/alphamap.jpg\");\r\n\r\n  const [currentColor, setCurrentColor] = useState(bgcolor);\r\n  const color = useRef(bgcolor);\r\n  const time = useRef(0);\r\n  const mat = useRef();\r\n  const STEP = 0.01;\r\n\r\n  useFrame(({ clock }) => {\r\n    const now = clock.getElapsedTime();\r\n    //console.log(now);\r\n    if (now - time.current > STEP) {\r\n      time.current = now;\r\n      const c = mix(bgcolor, color.current, 3); // 3%\r\n      color.current = c;\r\n      mat.current.color = hexToRgb(c);\r\n    }\r\n    //console.log(mat.current.color);\r\n  });\r\n\r\n  return (\r\n    <Plane\r\n      args={[100, 100]}\r\n      receiveShadow\r\n      rotation-x={-Math.PI / 2}\r\n      position={[0, -12, 0]}\r\n      //onClick={() => setActive(Number(!active))}\r\n    >\r\n      <meshPhysicalMaterial\r\n        //meshStandardMaterial\r\n\r\n        ref={mat}\r\n        attach=\"material\"\r\n        //color={bgcolor}\r\n        roughness={0.5}\r\n        transparent\r\n        opacity={0.6}\r\n        alphaMap={alphaMap}\r\n      />\r\n    </Plane>\r\n  );\r\n}\r\n\r\nfunction hashToURL(hash) {\r\n  const parts = hash.split(\"/\");\r\n  hash = parts[0];\r\n  let cid = new CID(hash).toV0();\r\n  const path = parts.length > 1 ? parts[1] : \"\";\r\n\r\n  console.log(cid.toString(), cid.version);\r\n  const cidv1 = cid.toV1();\r\n\r\n  const hashv0 = cid.toString();\r\n  console.log(hashv0);\r\n\r\n  const hashv1 = cidv1.toBaseEncodedString(\"b\");\r\n  console.log(hashv1);\r\n\r\n  return `https://${hashv1}.ipfs.dweb.link/${path}`;\r\n  //`https://ipfs.io/ipfs/${default_hash}`\r\n  //`https://gateway.pinata.cloud/ipfs/Qmf6gwEkmkW6VTEsku8nenQVroV9A7wuPKKSX7YCtbNwmf`\r\n  //`https://ipfs.kaleido.art/ipfs/${default_hash_new}`;\r\n  //`https://hardbin.com/ipfs/${default_hash_new}`;\r\n}\r\n\r\nfunction ItemPage() {\r\n  /*\r\n  const directionalLight1 = useMemo(\r\n    () => new THREE.DirectionalLight(0xffffff),\r\n    []\r\n  );*/\r\n\r\n  const [state, setState] = useState(false);\r\n\r\n  const hash = \"Qmf6gwEkmkW6VTEsku8nenQVroV9A7wuPKKSX7YCtbNwmf\";\r\n\r\n  const [texx, setTexx] = useState(hash);\r\n  const [modelUrl, setModelUrl] = useState(hashToURL(hash));\r\n\r\n  const [bgcolor, setBgcolor] = useState(\"#0a1022\");\r\n  /*\r\n  const [colorAnimActive, setColorAnimActive] = useState(0);\r\n\r\n  const { spring } = useSpring({\r\n    spring: active,\r\n    config: { mass: 5, tension: 400, friction: 50, precision: 0.0001 },\r\n  });\r\n\r\n  const color = spring.to([0, 1], [\"#000000\", \"#ffffff\"]);*/\r\n\r\n  const mouse = useRef([0, 0]);\r\n  const onMouseMove = useCallback(({ clientX: x, clientY: y }) => {\r\n    console.log(x, y);\r\n    return (mouse.current = [\r\n      x, // - window.innerWidth / 2,\r\n      y, //-(y - window.innerHeight / 2),\r\n    ]);\r\n  }, []);\r\n\r\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page\">\r\n        <div className=\"canvas-holder\" style={{ background: bgcolor }}>\r\n          {/* <primitive object={gltf.scene} /> */}\r\n          <Canvas\r\n            linear\r\n            dpr={[1, 2]}\r\n            camera={{ fov: 65, position: [15, 12, 15] }}\r\n            onCreated={({ gl }) => {\r\n              //gl.toneMapping = THREE.Uncharted2ToneMapping;\r\n              //gl.setClearColor(new THREE.Color(bgcolor));\r\n            }}\r\n            //onMouseMove={onMouseMove}\r\n            onMouseMove={() => {\r\n              console.log(\"oops!\");\r\n            }}\r\n            onMouseOver={() => {\r\n              console.log(\"what?\");\r\n            }}\r\n            onMouseMoveCapture={() => {\r\n              console.log(\"hmmm\");\r\n            }}\r\n            onPointerMove={() => {\r\n              console.log(\"oh oh oh\");\r\n            }}\r\n            onPointerDown={() => {\r\n              console.log(\"hey!\");\r\n            }}\r\n            onPointerMoveCapture={() => {\r\n              console.log(\"popopo\");\r\n            }}\r\n            colorManagement\r\n            shadowMap\r\n            shadows\r\n            //mode=\"concurrent\"\r\n          >\r\n            <AdaptiveDpr pixelated />\r\n\r\n            <Lights />\r\n\r\n            <OrbitControls\r\n              minDistance={10}\r\n              maxDistance={100}\r\n              enablePan={true}\r\n            />\r\n\r\n            <Suspense fallback={null}>\r\n              <GroundPlane bgcolor={bgcolor} />\r\n            </Suspense>\r\n\r\n            <Suspense fallback={null}>\r\n              <UnusualCube url={modelUrl} receiveShadow />\r\n            </Suspense>\r\n\r\n            <Suspense fallback={null}>\r\n              <Halo url={BASEPATH + \"/halo/halo-silver.glb\"} receiveShadow />\r\n            </Suspense>\r\n\r\n            <Suspense fallback={null}>\r\n              <Particles\r\n                url={BASEPATH + \"/snowflakes_lowres2.glb\"}\r\n                radius={12}\r\n                mouse={mouse}\r\n                count={isMobile ? 20 : 50}\r\n              />\r\n            </Suspense>\r\n          </Canvas>\r\n        </div>\r\n\r\n        <div className=\"ui\">\r\n          <button\r\n            onClick={() => {\r\n              setState(!state);\r\n              console.log(state);\r\n              setBgcolor(\r\n                \"#\" + Math.floor(Math.random() * 16777215).toString(16)\r\n              );\r\n            }}\r\n          >\r\n            Random Color\r\n          </button>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              setModelUrl(hashToURL(texx));\r\n            }}\r\n          >\r\n            <div className=\"ui__url\">\r\n              <input\r\n                style={{ flex: 1 }}\r\n                value={texx}\r\n                onChange={(e) => setTexx(e.target.value)}\r\n              ></input>\r\n              <button type=\"submit\">Load</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemPage;\r\n\r\n// https://ipfs.io/ipfs/QmemboaYqexp3AryYtNAXbw1DXj7vPK2ZCsu2RVKuhyDhb/model_502.glb\r\n// QmemboaYqexp3AryYtNAXbw1DXj7vPK2ZCsu2RVKuhyDhb/model_502.glb\r\n","import \"./Homepage.css\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState } from \"react\";\r\n\r\nimport Text from \"../../test/Text\";\r\n\r\nimport { useLoader, Canvas, useFrame } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n} from \"@react-three/drei\";\r\nimport ItemPage from \"../item-page/ItemPage\";\r\n\r\nfunction Box(props) {\r\n  // This reference will give us direct access to the mesh\r\n  const mesh = useRef();\r\n  // Set up state for the hovered and active state\r\n  const [hovered, setHover] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  // Subscribe this component to the render-loop, rotate the mesh every frame\r\n  useFrame((state, delta) => (mesh.current.rotation.x += 0.01));\r\n  // Return view, these are regular three.js elements expressed in JSX\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? 1.5 : 1}\r\n      onClick={(event) => setActive(!active)}\r\n      onPointerOver={(event) => setHover(true)}\r\n      onPointerOut={(event) => setHover(false)}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction Homepage() {\r\n  //const gltf = useLoader(GLTFLoader, \"data/model.glb\");\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <h1 style={{ color: \"#ffffff\" }}> HomePage </h1>\r\n      <br />\r\n      <Link to=\"/item/1\">To Item Page</Link>\r\n      {/* <primitive object={gltf.scene} /> */}\r\n\r\n      {/*<div className=\"canvas-holder\"></div>\r\n       <Canvas\r\n        linear\r\n        dpr={[1, 2]}\r\n        camera={{ fov: 100, position: [0, 0, 30] }}\r\n        onCreated={({ gl }) => {\r\n          //gl.toneMapping = THREE.Uncharted2ToneMapping;\r\n          //gl.setClearColor(new THREE.Color(\"#0a1022\"));\r\n        }}\r\n        //shadowMap\r\n      >\r\n        <directionalLight\r\n          castShadow\r\n          position={[-10, 10, 10]}\r\n          intensity={1}\r\n          //shadow-mapSize-width={1024}\r\n          //shadow-mapSize-height={1024}\r\n        />\r\n        <pointLight position={[10, 10, 10]} intensity={0} color={\"#ff0000\"} />\r\n        <OrbitControls />\r\n\r\n        <Suspense fallback={null}>\r\n          <Text> Hello </Text>\r\n        </Suspense>\r\n\r\n        <Plane args={[1000, 1000]}>\r\n          <meshStandardMaterial attach=\"material\" color=\"#888\" />\r\n        </Plane>\r\n\r\n        <Suspense fallback={null}>\r\n          <Environment\r\n            background={true} // Whether to affect scene.background\r\n            files={[\"courtyard.jpg\"]} // Array of cubemap files OR single equirectangular file\r\n            path={\"/\"} // Path to the above file(s)\r\n            //preset={null} // Preset string (overrides files and path)\r\n          />\r\n        </Suspense>\r\n        <ContactShadows />\r\n      </Canvas>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Homepage from \"./pages/homepage/Homepage\";\r\nimport ItemPage from \"./pages/item-page/ItemPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" render={(props) => <Homepage {...props} />} exact />\r\n        <Route\r\n          path=\"/item/:id\"\r\n          render={(props) => <ItemPage {...props} />}\r\n          exact\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}