{"version":3,"sources":["logo.svg","basepath.js","test/Text.js","components/UnusualCube/UnusualCube.js","components/Particles/Particle.js","components/Particles/Particles.js","pages/item-page/ItemPage.js","pages/homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["BASEPATH","extend","TextGeometry","Text","UnusualCube","url","receiveShadow","useGLTF","scene","nodes","animations","materials","useAnimations","actions","ref","mixer","names","clips","console","log","useEffect","Object","values","forEach","action","i","play","child","castShadow","Boolean","scale","position","object","Particle","model","radius","randomness","mouse","current","count","mesh","useRef","useThree","size","viewport","dummy","width","useMemo","THREE","particles","temp","t","Math","random","factor","speed","xFactor","yFactor","zFactor","push","mx","my","useFrame","state","particle","s","pow","cos","a","sin","b","fx","fy","fz","set","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","args","geometry","material","Particles","meshes","filter","item","type","x","map","name","GroundPlane","bgcolor","alphaMap","useLoader","TextureLoader","useState","color","time","mat","now","clock","getElapsedTime","c","color_1","color_2","weight","h2d","h","parseInt","v1","substr","v2","val","floor","toString","length","mix","hex","result","exec","r","g","hexToRgb","PI","attach","roughness","transparent","opacity","hashToURL","hash","cid","CID","toV0","version","cidv1","toV1","hashv0","hashv1","toBaseEncodedString","ItemPage","setState","texx","setTexx","modelUrl","setModelUrl","setBgcolor","className","style","background","linear","dpr","camera","fov","onCreated","gl","colorManagement","shadowMap","shadows","mode","AdaptiveDpr","pixelated","intensity","angle","penumbra","OrbitControls","minDistance","maxDistance","enablePan","fallback","Environment","files","path","onClick","flex","value","onChange","e","target","Homepage","to","App","basename","process","render","props","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cccbeae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const BASEPATH = \"/unusualcubes-fe\"; //\"/UnusualCubesApp\";\r\n\r\nexport default BASEPATH;\r\n","import * as THREE from \"three\";\r\nimport React, { useMemo, useRef, useLayoutEffect } from \"react\";\r\nimport { extend, useLoader } from \"@react-three/fiber\";\r\nimport { FontLoader } from \"three/examples/jsm/loaders/FontLoader\";\r\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\r\nimport BASEPATH from \"../basepath\";\r\n\r\nextend({ TextGeometry });\r\n\r\nfunction Text({\r\n  children,\r\n  vAlign = \"center\",\r\n  hAlign = \"center\",\r\n  size = 1.5,\r\n  color = \"#000000\",\r\n  ...props\r\n}) {\r\n  const font = useLoader(FontLoader, BASEPATH + \"/CocoSharp.json\");\r\n  const config = useMemo(\r\n    () => ({\r\n      font,\r\n      size: 40,\r\n      height: 30,\r\n      curveSegments: 12,\r\n      bevelEnabled: false,\r\n      flatShading: false,\r\n    }),\r\n    [font]\r\n  );\r\n  const mesh = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    const size = new THREE.Vector3();\r\n    mesh.current.geometry.computeBoundingBox();\r\n    mesh.current.geometry.boundingBox.getSize(size);\r\n    mesh.current.position.x =\r\n      hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x;\r\n    mesh.current.position.y =\r\n      vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y;\r\n  }, [children]);\r\n\r\n  return (\r\n    <group {...props} scale={[size * 0.05, size * 0.05, size * 0.04]}>\r\n      <mesh ref={mesh} castShadow receiveShadow>\r\n        <textGeometry attach=\"geometry\" args={[children, config]} />\r\n        <meshPhysicalMaterial\r\n          attach=\"material\"\r\n          color=\"#ffffff\"\r\n          flatShading={false}\r\n          roughness={0.05}\r\n          needsUpdate={true}\r\n        />\r\n      </mesh>\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n","import * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState, useMemo, useEffect } from \"react\";\r\n\r\nimport { useLoader, Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\n\r\nfunction UnusualCube({ url = BASEPATH + \"/model_6.glb\", receiveShadow }) {\r\n  //const three = useThree();\r\n  //const { size, viewport, gl, camera, clock } = three;\r\n\r\n  //const model = useRef();\r\n\r\n  //const dummy = useMemo(() => new THREE.Object3D(), []);\r\n\r\n  const { scene, nodes, materials, animations } = useGLTF(url);\r\n\r\n  const { ref, mixer, names, actions, clips } = useAnimations(\r\n    animations,\r\n    scene\r\n  );\r\n\r\n  console.log(\"nodes\", nodes);\r\n  useEffect(() => {\r\n    console.log(\"actions:\", actions);\r\n    Object.values(actions).forEach((action, i) => {\r\n      action.play();\r\n    });\r\n  }, []);\r\n\r\n  for (let child of Object.values(nodes)) {\r\n    child.castShadow = true;\r\n    child.receiveShadow = Boolean(receiveShadow);\r\n  }\r\n  /*\r\n  const parts = Object.values(nodes).filter((node) => node.type === \"Mesh\");\r\n\r\n\r\n  // Render-loop\r\n  useFrame(() => {\r\n    // Update instanced diamonds\r\n    parts.forEach((part, i) => {\r\n      const { position, rotation, scale } = part;\r\n      dummy.position.set(position.x, position.y, position.z);\r\n      dummy.rotation.set(rotation.x, rotation.y, rotation.z);\r\n      dummy.scale.set(scale.x, scale.y, scale.z);\r\n      dummy.updateMatrix();\r\n      model.current.setMatrixAt(i, dummy.matrix);\r\n      model.current.setColorAt(i, part.material.color);\r\n    });\r\n    model.current.instanceMatrix.needsUpdate = true;\r\n\r\n    camera.layers.set(0);\r\n    gl.setRenderTarget(null);\r\n    gl.render(three.scene, camera);\r\n  }, 1);*/\r\n\r\n  return (\r\n    <group scale={[0.5, 0.5, 0.5]} position={[-4.5, -4.5, 4.5]}>\r\n      <primitive object={scene} />\r\n      {/* <instancedMesh\r\n        ref={model}\r\n        args={[\r\n          parts[0].geometry,\r\n          new THREE.MeshPhysicalMaterial({\r\n            roughness: parts[0].material.roughness,\r\n          }),\r\n          parts.length,\r\n        ]}\r\n        castShadow\r\n      ></instancedMesh> */}\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default UnusualCube;\r\n","import * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState, useMemo, useEffect } from \"react\";\r\n\r\nimport { useLoader, Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\nimport { Vector3 } from \"three\";\r\n\r\nfunction Particle({\r\n  model,\r\n  radius = 1,\r\n  randomness = 0.08,\r\n  mouse = { current: [0, 0] },\r\n  count = 100,\r\n}) {\r\n  const mesh = useRef();\r\n  const light = useRef();\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n\r\n  const dummy = useMemo(() => new THREE.Object3D(), []);\r\n  // Generate some random positions, speed factors and timings\r\n  const particles = useMemo(() => {\r\n    const temp = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const t = Math.random() * 100;\r\n      const factor = 20 + Math.random() * 100;\r\n      const speed = 0.001 + Math.random() / 1000;\r\n      const xFactor = -1 + Math.random() * 2;\r\n      const yFactor = -1 + Math.random() * 2;\r\n      const zFactor = -1 + Math.random() * 2;\r\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 });\r\n    }\r\n    return temp;\r\n  }, [count]);\r\n  // The innards of this hook will run every frame\r\n  useFrame((state) => {\r\n    // Makes the light follow the mouse\r\n    /*\r\n    light.current.position.set(\r\n      mouse.current[0] / aspect,\r\n      -mouse.current[1] / aspect,\r\n      0\r\n    );*/\r\n    // Run through the randomized data to calculate some movement\r\n    particles.forEach((particle, i) => {\r\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle;\r\n      // There is no sense or reason to any of this, just messing around with trigonometric functions\r\n      const s = (0.01 + Math.pow(Math.cos(t), 2)) * 1.1;\r\n      t = particle.t += speed / 2 / s / 5;\r\n      const a = Math.cos(t) + Math.sin(t * 1) / 10;\r\n      const b = Math.sin(t) + Math.cos(t * 2) / 10;\r\n      particle.mx += (mouse.current[0] - particle.mx) * 0.01;\r\n      particle.my += (mouse.current[1] * -1 - particle.my) * 0.01;\r\n      // Update the dummy object\r\n      //console.log(state.clock);\r\n      const fx =\r\n        (particle.mx / 10) * a +\r\n        xFactor +\r\n        Math.cos((t / 10) * factor) +\r\n        (Math.sin(t * 1) * factor) / 10;\r\n      const fy =\r\n        (particle.my / 10) * b +\r\n        yFactor +\r\n        Math.sin((t / 10) * factor) +\r\n        (Math.cos(t * 2) * factor) / 10;\r\n\r\n      const fz =\r\n        (particle.my / 10) * b +\r\n        zFactor +\r\n        Math.cos((t / 10) * factor) +\r\n        (Math.sin(t * 3) * factor) / 10;\r\n\r\n      dummy.position.set(\r\n        radius * Math.cos(fx) * Math.sin(fy),\r\n        radius * Math.cos(fy),\r\n        radius * Math.sin(fx) * Math.sin(fy)\r\n      );\r\n      dummy.scale.set(s, s, s);\r\n      dummy.rotation.set(fx / 20, fz, fy / 20);\r\n      dummy.updateMatrix();\r\n      // And apply the matrix to the instanced item\r\n      mesh.current.setMatrixAt(i, dummy.matrix);\r\n    });\r\n    mesh.current.instanceMatrix.needsUpdate = true;\r\n  });\r\n\r\n  return (\r\n    <instancedMesh\r\n      ref={mesh}\r\n      args={[model.geometry, model.material, count]}\r\n    ></instancedMesh>\r\n  );\r\n}\r\n\r\nexport default Particle;\r\n","import * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState, useMemo, useEffect } from \"react\";\r\n\r\nimport { useLoader, Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\nimport { Vector3 } from \"three\";\r\nimport Particle from \"./Particle\";\r\n\r\nfunction Particles({\r\n  url = BASEPATH + \"/shards.glb\",\r\n  radius = 1,\r\n  randomness = 0.08,\r\n}) {\r\n  //const three = useThree();\r\n  //const { size, viewport, gl, camera, clock } = three;\r\n\r\n  //const model = useRef();\r\n\r\n  //const dummy = useMemo(() => new THREE.Object3D(), []);\r\n\r\n  const { scene, nodes, materials, animations } = useGLTF(url);\r\n\r\n  const { ref, mixer, names, actions, clips } = useAnimations(\r\n    animations,\r\n    scene\r\n  );\r\n\r\n  const meshes = Object.values(nodes).filter((item) => item.type == \"Mesh\");\r\n  meshes.forEach((item) => (item.position.x = 0));\r\n  console.log(\"meshes\", meshes);\r\n\r\n  return (\r\n    <group scale={[1, 1, 1]} position={[0, 0, 0]}>\r\n      {meshes.map((mesh) => (\r\n        // <primitive object={mesh} key={mesh.name} />\r\n        <Particle\r\n          model={mesh}\r\n          radius={radius}\r\n          randomness={randomness}\r\n          key={mesh.name}\r\n        />\r\n      ))}\r\n      {/* <instancedMesh\r\n        ref={model}\r\n        args={[\r\n          parts[0].geometry,\r\n          new THREE.MeshPhysicalMaterial({\r\n            roughness: parts[0].material.roughness,\r\n          }),\r\n          parts.length,\r\n        ]}\r\n        castShadow\r\n      ></instancedMesh> */}\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default Particles;\r\n","import \"./ItemPage.css\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState, useMemo, useEffect } from \"react\";\r\n\r\nimport Text from \"../../test/Text\";\r\n\r\nimport { useLoader, Canvas, useFrame } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n  useGLTF,\r\n  useAnimations,\r\n  AdaptiveDpr,\r\n  Merged,\r\n  Sky,\r\n  Html,\r\n  softShadows,\r\n} from \"@react-three/drei\";\r\nimport BASEPATH from \"../../basepath\";\r\n\r\nimport { useSpring } from \"@react-spring/core\";\r\nimport { a } from \"@react-spring/three\";\r\nimport { Object3D } from \"three\";\r\nimport UnusualCube from \"../../components/UnusualCube/UnusualCube\";\r\n\r\nimport * as CIDTOOL from \"cid-tool\";\r\nimport * as CID from \"cids\";\r\nimport Particles from \"../../components/Particles/Particles\";\r\n\r\nvar mix = function (color_1, color_2, weight) {\r\n  function d2h(d) {\r\n    return d.toString(16);\r\n  } // convert a decimal value to hex\r\n  function h2d(h) {\r\n    return parseInt(h, 16);\r\n  } // convert a hex value to decimal\r\n\r\n  weight = typeof weight !== \"undefined\" ? weight : 50; // set the weight to 50%, if that argument is omitted\r\n\r\n  var color = \"#\";\r\n\r\n  for (var i = 0; i <= 5; i += 2) {\r\n    // loop through each of the 3 hex pairs—red, green, and blue\r\n    var v1 = h2d(color_1.substr(i + 1, 2)), // extract the current pairs\r\n      v2 = h2d(color_2.substr(i + 1, 2)),\r\n      // combine the current pairs from each source color, according to the specified weight\r\n      val = d2h(Math.floor(v2 + (v1 - v2) * (weight / 100.0)));\r\n\r\n    while (val.length < 2) {\r\n      val = \"0\" + val;\r\n    } // prepend a '0' if val results in a single digit\r\n\r\n    color += val; // concatenate val to our new color string\r\n  }\r\n\r\n  return color; // PROFIT!\r\n};\r\n\r\nfunction Box(props) {\r\n  // This reference will give us direct access to the mesh\r\n  const mesh = useRef();\r\n  // Set up state for the hovered and active state\r\n  const [hovered, setHover] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  // Subscribe this component to the render-loop, rotate the mesh every frame\r\n  useFrame((state, delta) => (mesh.current.rotation.x += 0.01));\r\n  // Return view, these are regular three.js elements expressed in JSX\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? 1.5 : 1}\r\n      onClick={(event) => setActive(!active)}\r\n      onPointerOver={(event) => setHover(true)}\r\n      onPointerOut={(event) => setHover(false)}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16) / 255.0,\r\n        g: parseInt(result[2], 16) / 255.0,\r\n        b: parseInt(result[3], 16) / 255.0,\r\n      }\r\n    : null;\r\n}\r\n\r\nfunction GroundPlane({ bgcolor }) {\r\n  const alphaMap = useLoader(TextureLoader, BASEPATH + \"/alphamap.jpg\");\r\n\r\n  const [currentColor, setCurrentColor] = useState(bgcolor);\r\n  const color = useRef(bgcolor);\r\n  const time = useRef(0);\r\n  const mat = useRef();\r\n  const STEP = 0.01;\r\n\r\n  useFrame(({ clock }) => {\r\n    const now = clock.getElapsedTime();\r\n    //console.log(now);\r\n    if (now - time.current > STEP) {\r\n      time.current = now;\r\n      const c = mix(bgcolor, color.current, 3); // 3%\r\n      color.current = c;\r\n      mat.current.color = hexToRgb(c);\r\n    }\r\n    //console.log(mat.current.color);\r\n  });\r\n\r\n  return (\r\n    <Plane\r\n      args={[100, 100]}\r\n      receiveShadow\r\n      rotation-x={-Math.PI / 2}\r\n      position={[0, -12, 0]}\r\n      //onClick={() => setActive(Number(!active))}\r\n    >\r\n      <meshPhysicalMaterial\r\n        ref={mat}\r\n        attach=\"material\"\r\n        //color={bgcolor}\r\n        roughness={0.5}\r\n        transparent\r\n        opacity={0.99}\r\n        alphaMap={alphaMap}\r\n      />\r\n    </Plane>\r\n  );\r\n}\r\n\r\nfunction hashToURL(hash) {\r\n  let cid = new CID(hash).toV0();\r\n\r\n  console.log(cid.toString(), cid.version);\r\n  const cidv1 = cid.toV1();\r\n\r\n  const hashv0 = cid.toString();\r\n  console.log(hashv0);\r\n\r\n  const hashv1 = cidv1.toBaseEncodedString(\"b\");\r\n  console.log(hashv1);\r\n\r\n  return `https://${hashv1}.ipfs.dweb.link`;\r\n  //`https://ipfs.io/ipfs/${default_hash}`\r\n  //`https://gateway.pinata.cloud/ipfs/Qmf6gwEkmkW6VTEsku8nenQVroV9A7wuPKKSX7YCtbNwmf`\r\n  //`https://ipfs.kaleido.art/ipfs/${default_hash_new}`;\r\n  //`https://hardbin.com/ipfs/${default_hash_new}`;\r\n}\r\n\r\nfunction ItemPage() {\r\n  /*\r\n  const directionalLight1 = useMemo(\r\n    () => new THREE.DirectionalLight(0xffffff),\r\n    []\r\n  );*/\r\n\r\n  const [state, setState] = useState(false);\r\n\r\n  const hash = \"Qmf6gwEkmkW6VTEsku8nenQVroV9A7wuPKKSX7YCtbNwmf\";\r\n\r\n  const [texx, setTexx] = useState(hashToURL(hash));\r\n  const [modelUrl, setModelUrl] = useState(hashToURL(hash));\r\n\r\n  const [bgcolor, setBgcolor] = useState(\"#0a1022\");\r\n  /*\r\n  const [colorAnimActive, setColorAnimActive] = useState(0);\r\n\r\n  const { spring } = useSpring({\r\n    spring: active,\r\n    config: { mass: 5, tension: 400, friction: 50, precision: 0.0001 },\r\n  });\r\n\r\n  const color = spring.to([0, 1], [\"#000000\", \"#ffffff\"]);*/\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"canvas-holder\" style={{ background: bgcolor }}>\r\n        {/* <primitive object={gltf.scene} /> */}\r\n        <Canvas\r\n          linear\r\n          dpr={[1, 2]}\r\n          camera={{ fov: 65, position: [15, 12, 15] }}\r\n          onCreated={({ gl }) => {\r\n            //gl.toneMapping = THREE.Uncharted2ToneMapping;\r\n            //gl.setClearColor(new THREE.Color(bgcolor));\r\n          }}\r\n          colorManagement\r\n          shadowMap\r\n          shadows\r\n          mode=\"concurrent\"\r\n        >\r\n          <AdaptiveDpr pixelated />\r\n          <pointLight position={[-5, 30, -12]} intensity={0.3} />\r\n          <spotLight\r\n            castShadow\r\n            //shadow-radius={0}\r\n            shadow-bias={-0.001}\r\n            position={[-10, 20, 10]}\r\n            intensity={1}\r\n            shadow-mapSize-width={512}\r\n            shadow-mapSize-height={512}\r\n            angle={Math.PI / 5}\r\n            penumbra={1}\r\n          />\r\n          <pointLight\r\n            position={[10, 20, -5]}\r\n            intensity={0.3}\r\n            color={\"#fffaf0\"}\r\n          />\r\n          {/* <primitive object={directionalLight1.target} position={[0, 0, 0]}/> */}\r\n          <OrbitControls minDistance={10} maxDistance={100} enablePan={false} />\r\n\r\n          <Suspense fallback={null}>\r\n            {/* <Text>{texx}</Text> */}\r\n            <GroundPlane bgcolor={bgcolor} />\r\n          </Suspense>\r\n          <Suspense fallback={null}>\r\n            <Environment\r\n              background={false} // Whether to affect scene.background\r\n              files=\"abandoned_workshop_1k_small.hdr\" // Array of cubemap files OR single equirectangular file\r\n              path={BASEPATH + \"/\"} // Path to the above file(s)\r\n              //preset={null} // Preset string (overrides files and path)\r\n            />\r\n          </Suspense>\r\n          <Suspense fallback={null}>\r\n            <UnusualCube\r\n              url={\r\n                modelUrl\r\n                //\"https://ipfs.io/ipfs/Qmf6gwEkmkW6VTEsku8nenQVroV9A7wuPKKSX7YCtbNwmf\"\r\n              }\r\n              receiveShadow\r\n            />\r\n            <Particles radius={10} />\r\n          </Suspense>\r\n          {/* <ContactShadows width={200} height={200} position-y={-10} far={20} /> */}\r\n          {/* <Sky sunPosition={[100, -3, -50]} distance={1000} /> */}\r\n          {/* <fog args={[\"white\", 10, 50]} /> */}\r\n        </Canvas>\r\n      </div>\r\n\r\n      <div className=\"ui\">\r\n        <button\r\n          onClick={() => {\r\n            setState(!state);\r\n            console.log(state);\r\n            setBgcolor(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\r\n          }}\r\n        >\r\n          Random Color\r\n        </button>\r\n        <div className=\"ui__url\">\r\n          <input\r\n            style={{ flex: 1 }}\r\n            value={texx}\r\n            onChange={(e) => setTexx(e.target.value)}\r\n          ></input>\r\n          <button onClick={() => setModelUrl(hashToURL(texx))}>Load</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemPage;\r\n","import \"./Homepage.css\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\n\r\nimport React, { Suspense, useRef, useState } from \"react\";\r\n\r\nimport Text from \"../../test/Text\";\r\n\r\nimport { useLoader, Canvas, useFrame } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nimport {\r\n  OrbitControls,\r\n  ContactShadows,\r\n  Environment,\r\n  Plane,\r\n} from \"@react-three/drei\";\r\nimport ItemPage from \"../item-page/ItemPage\";\r\n\r\nfunction Box(props) {\r\n  // This reference will give us direct access to the mesh\r\n  const mesh = useRef();\r\n  // Set up state for the hovered and active state\r\n  const [hovered, setHover] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  // Subscribe this component to the render-loop, rotate the mesh every frame\r\n  useFrame((state, delta) => (mesh.current.rotation.x += 0.01));\r\n  // Return view, these are regular three.js elements expressed in JSX\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? 1.5 : 1}\r\n      onClick={(event) => setActive(!active)}\r\n      onPointerOver={(event) => setHover(true)}\r\n      onPointerOut={(event) => setHover(false)}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction Homepage() {\r\n  //const gltf = useLoader(GLTFLoader, \"data/model.glb\");\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <h1 style={{ color: \"#ffffff\" }}> HomePage </h1>\r\n      <br />\r\n      <Link to=\"/item/1\">To Item Page</Link>\r\n      {/* <primitive object={gltf.scene} /> */}\r\n\r\n      {/*<div className=\"canvas-holder\"></div>\r\n       <Canvas\r\n        linear\r\n        dpr={[1, 2]}\r\n        camera={{ fov: 100, position: [0, 0, 30] }}\r\n        onCreated={({ gl }) => {\r\n          //gl.toneMapping = THREE.Uncharted2ToneMapping;\r\n          //gl.setClearColor(new THREE.Color(\"#0a1022\"));\r\n        }}\r\n        //shadowMap\r\n      >\r\n        <directionalLight\r\n          castShadow\r\n          position={[-10, 10, 10]}\r\n          intensity={1}\r\n          //shadow-mapSize-width={1024}\r\n          //shadow-mapSize-height={1024}\r\n        />\r\n        <pointLight position={[10, 10, 10]} intensity={0} color={\"#ff0000\"} />\r\n        <OrbitControls />\r\n\r\n        <Suspense fallback={null}>\r\n          <Text> Hello </Text>\r\n        </Suspense>\r\n\r\n        <Plane args={[1000, 1000]}>\r\n          <meshStandardMaterial attach=\"material\" color=\"#888\" />\r\n        </Plane>\r\n\r\n        <Suspense fallback={null}>\r\n          <Environment\r\n            background={true} // Whether to affect scene.background\r\n            files={[\"courtyard.jpg\"]} // Array of cubemap files OR single equirectangular file\r\n            path={\"/\"} // Path to the above file(s)\r\n            //preset={null} // Preset string (overrides files and path)\r\n          />\r\n        </Suspense>\r\n        <ContactShadows />\r\n      </Canvas>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Homepage from \"./pages/homepage/Homepage\";\r\nimport ItemPage from \"./pages/item-page/ItemPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" render={(props) => <Homepage {...props} />} exact />\r\n        <Route\r\n          path=\"/item/:id\"\r\n          render={(props) => <ItemPage {...props} />}\r\n          exact\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}